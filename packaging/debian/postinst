#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

APP_NAME="openproject"
CLI="${APP_NAME}"

# source debconf library
. /usr/share/debconf/confmodule

case "$1" in

  configure)
    rake_commands="db:migrate"
    if [ "$2" = "" ]; then
      rake_commands="${rake_commands} db:seed"
    fi

    # create attachments_path
    ${CLI} run mkdir -p /var/db/openproject/files

    # set SECRET_TOKEN env variable
    secret_token=$(< /dev/urandom tr -dc a-z0-9 | head -c128;echo;)
    ${CLI} config:get SECRET_TOKEN || ${CLI} config:set SECRET_TOKEN="$secret_token" || true

    # migrate
    ${CLI} run rake ${rake_commands} || true

    # set SYS_API_KEY
    sys_api_key_random=$(< /dev/urandom tr -dc a-z0-9 | head -c32;echo;)
    sys_api_key=$(${CLI} config:get SYS_API_KEY || echo "${sys_api_key_random}")
    ${CLI} config:set SYS_API_KEY="${sys_api_key}"

    # set various settings
    db_get openproject/server/hostname
    if [ -z "$RET" ]; then web_hostname=$(hostname -f); else web_hostname="$RET"; fi
    db_get openproject/server/ssl
    if [ "$RET" = "true" ]; then web_protocol="https"; else web_protocol="http"; fi
    ${CLI} run rake setting:set[host_name=${web_hostname},protocol=${web_protocol},sys_api_enabled=1,sys_api_key=${sys_api_key}] 1>/dev/null

    port=$(${CLI} config:get PORT || echo "6000")

    # setup SVN integration
    db_get ${APP_NAME}/svn-dav/autoinstall || true
    if [ "$RET" = "true" ]; then
      db_get ${APP_NAME}/svn-dav/repositories || true
      svn_repositories="$RET"

      cp -f "/opt/${APP_NAME}/extra/svn/OpenProjectAuthentication.pm" /usr/lib/perl5/Apache/
      echo "PerlLoadModule Apache::OpenProjectAuthentication" > "/etc/${APP_NAME}/apache2/svn-perl.conf"

      src="/usr/share/${APP_NAME}-svn-dav/templates/includes/vhost/svn.conf"
      dst="/etc/${APP_NAME}/apache2/vhost/svn.conf"
      if [ -f "$src" ]; then
	tmpfile=$(mktemp)
	cp -f "$src" "$tmpfile"
	sed -i "s|_SVN_REPOSITORIES_|${svn_repositories}|g" ${tmpfile}
	sed -i "s|_APP_URI_|http://127.0.0.1:${port}|g" ${tmpfile}
	sed -i "s|_APP_API_KEY_|${sys_api_key}|g" ${tmpfile}
	mv -f "$tmpfile" "$dst"
	chmod 0640 "$dst"
      else
	echo "Can't find the SVN vhost configuration. Please ensure that the svn-dav addon is installed."
      fi
      service apache2 reload || true
    fi

    # scale
    ${CLI} scale web=1 worker=1 || true

    # let the admin reboot when he's ready
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

